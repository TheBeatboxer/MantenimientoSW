const googleDriveOAuthService = require('../services/googleDriveOAuthService');
require('dotenv').config();

async function setupGoogleDriveOAuth() {
  console.log('üîß Configurando Google Drive OAuth...');
  
  try {
    // Verificar configuraci√≥n
    console.log('üìã Verificando configuraci√≥n...');
    console.log('GOOGLE_DRIVE_ENABLED:', process.env.GOOGLE_DRIVE_ENABLED);
    console.log('GOOGLE_DRIVE_FOLDER_ID:', process.env.GOOGLE_DRIVE_FOLDER_ID);
    console.log('GOOGLE_DRIVE_OAUTH_CREDENTIALS_PATH:', process.env.GOOGLE_DRIVE_OAUTH_CREDENTIALS_PATH);
    
    if (!process.env.GOOGLE_DRIVE_OAUTH_CREDENTIALS_PATH) {
      console.log('‚ùå GOOGLE_DRIVE_OAUTH_CREDENTIALS_PATH no est√° configurado en .env');
      console.log('üìù Agrega esta l√≠nea a tu archivo .env:');
      console.log('GOOGLE_DRIVE_OAUTH_CREDENTIALS_PATH=./credentials/oauth-credentials.json');
      return;
    }

    // Inicializar servicio
    const initialized = await googleDriveOAuthService.initialize();
    
    if (initialized) {
      console.log('‚úÖ Google Drive OAuth configurado exitosamente');
      
      // Mostrar informaci√≥n de la carpeta
      const folderInfo = await googleDriveOAuthService.getFolderInfo();
      if (folderInfo) {
        console.log('üìÅ Carpeta configurada:', folderInfo.name);
        console.log('üîó Enlace:', folderInfo.webViewLink);
      }
      
      // Listar archivos existentes
      const files = await googleDriveOAuthService.listFilesInFolder();
      console.log(`üìä Archivos en la carpeta: ${files.length}`);
      
    } else {
      console.log('‚ö†Ô∏è  Google Drive OAuth requiere autorizaci√≥n');
      console.log('üìù Sigue las instrucciones que aparecieron arriba');
    }
    
  } catch (error) {
    console.error('‚ùå Error configurando Google Drive OAuth:', error.message);
  }
}

setupGoogleDriveOAuth();
